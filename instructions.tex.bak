\documentclass[oneside,letterpaper,12pt,titlepage]{article}

\usepackage[letterpaper]{geometry}
\usepackage{graphicx}
\usepackage{fancyhdr}
\usepackage{booktabs}
\usepackage{amsmath}
\usepackage[bookmarks,hidelinks]{hyperref}

\begin{document}
\author{Eric Karr}
\title{Altera UP Lab 3}
\date{\today}

\maketitle

\section{Lab 1}

\subsection{Part 1}
The switches 17-0 illuminate the red LEDs 17-0 respectively.

\subsection{Part 2}
A 2-1 multiplexer, SW[7-0] are one set of inputs while SW[15-8] are the other. SW[17] is the selector bit. The output is displayed on the green LEDs 7-0.

\subsection{Part 3}
A 3-bit wide 5-to-1 multiplexer is implemented in this lab. SW[14-0] are used for the five 3-bit inputs. SW[17-15] are used as our 3 selector pins.

\subsection{Part 4}
A three bit decoder module is implemented in this lab controlled by switches 2-0. The output of this result is displayed on HEX0.

\subsection{Part 5}
Switches 14-0 are used for five 3 bit inputs each of which are passed into a 5-1 multiplexer. The order of the letters displayed is changed by switches 17-15. 

\subsection{Part 6}

\section{Lab 2}
\subsection{Part 1}
Switches 15-0 compose four 4-bit groupings that select what is displayed on HEX3-HEX0 respectively.

\subsection{Part 2}
The switches 3-0 control the four multiplexers that change the BCD displayed on the 7 segment displays.

\subsection{Part 3}
Switches 7-4 and 3-0 are two 4 bit numbers that are added together with their results being displayed on the green LEDs.

\subsection{Part 4}
Adds two BCD numbers, switches 7-4 and 3-0 are used as two 4-bit inputs, switch 8 is used for carry-in. The numbers A and B are displayed on HEX6 and HEX4 respectively. The result of the addition is displayed on HEX1 and HEX0. 

\subsection{Part 5}
Addition of two 2-digit BCD numbers. The first 2-digits are represented by switches 15-8, with the second 2 digits are represented by switches 7-0. The results are displayed on HEX2, HEX1, and HEX0.

\subsection{Part 6}
A similar type of adder as in part 5 is implemented using different methodology.

\subsection{Part 7}
A 6-bit number is represented by switches 5-0 and displayed on HEX1 and HEX0.

\section{Lab 3}

\subsection{Part 1}
Switches 1 and 0 are the S and R inputs respectively for an SR latch. Switch 2 is used to simulate the clock, along with the outputs of the SR latch Q and Q bar on LEDG1 and LEDG0 respectively.

\subsection{Part 2}
A D flip flop is implemented in this lab. Switch 0 is the input D, switch 1 is the clock, and the outputs of the DFF Q and Q bar are displayed respectively on LEDG1 and LEDG0.

\subsection{Part 3}
This part is two flip flops cascaded. Switch 0 represents the input, switch 1 represents the clock. LEDG2 represents Qm, which is the output of the first flip flop going into the second flip flop. While LEDG1 and LEDG0 are the outputs of the final flip flop Q and Q bar respectively.

\subsection{Part 4}
The following part implements three different storage elements. The gated D latch which outputs to LEDG2. A positive-edge triggered D flip flop outputting to LEDG1, and a negative-edge triggered D flip flop outputting to LEDG0. The input used is SW[0] for D, and SW[1] is the clock.

\subsection{Part 5}
When SW[17] is equal to one, hex displays 7-4 are being modified by the switches 15-0 after KEY0 (our clock) is pressed. When SW[17] is zero, the hex displays 3-0 are being modified by the values of the switches 15-0 after a clock pulse simulated by KEY0.

\section{Lab 4}

\subsection{Part 1}
Switch 1 is used as an enable, and switch 0 is used as the reset. Set both high initially, press KEY1 to increment the count. The count is displayed on HEX1 and HEX0, put SW[1] to zero to halt the counters incremental ability, and put SW[0] to zero to reset the counter back to zero. The count is also displayed in binary on the green LEDs.

\subsection{Part 2}
Same operation as part one, except for four digits. KEY1 increments the counter and HEX3-0 display the result. 

\subsection{Part 3}
A counter is implemented in software using the LPM.

\subsection{Part 4}
HEX0 is automatically incremented using a counter from 0-9 then it automatically rolls over.

\subsection{Part 5}
When the program is loaded the word ``HELLO'' automatically begins to scroll left across the HEX displays.

\section{Lab 5}

\subsection{Part 1}
In the main module the parameters \texttt{cntrBits} and \texttt{k} define the precision of the counter and the value the counter will reach before resetting respectively. The value of the counter is displayed on the red LEDs. The manual clock is attached to KEY2, and the reset is attached to KEY1.

\subsection{Part 2}
KEY 1 is used to reset the counter. Hex displays 2-0 display the count in BCD representation. When the counter reaches 999 it rolls over to 000.

\subsection{Part 3}
Works as a 24 hour clock, begins counting right away. The hour and minutes displays will take on the values of the switches initially. To initialize the clock, load desired values for the hour and minute onto switches 15-0 and press KEY1. Anytime values are to be loaded into the hour or minute use KEY1. You \textbf{must} initialize the clock with a KEY1 press.

\subsection{Part 4}
Use the switches 2-0 to select a letter A-H respectively. Press KEY1 to view the morse code for the letter selected on LEDR0. KEY0 is used as an asynchronous reset.

\end{document}